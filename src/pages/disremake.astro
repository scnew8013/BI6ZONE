<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Unblockedcord</title>
  <script type='text/javascript' src='https://cdn.scaledrone.com/scaledrone.min.js'></script>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      display: flex;
      height: 100vh;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background-color: #36393F;
      color: white;
      overflow: hidden;
    }

    /* Server Sidebar */
    .server-sidebar {
      width: 72px;
      background-color: #1f1e23;
      padding: 12px 8px;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 8px;
    }

    .server-icon {
      width: 48px;
      height: 48px;
      background-color: #5865F2;
      border-radius: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: border-radius 0.2s ease;
      position: relative;
    }

    .server-icon:hover {
      border-radius: 16px;
    }

    .server-icon img {
      width: 28px;
      height: 28px;
      border-radius: 50%;
    }

    .separator {
      width: 32px;
      height: 2px;
      background-color: #4F545C;
      border-radius: 1px;
      margin: 4px 0;
    }

    .nav-icon {
      width: 48px;
      height: 48px;
      background-color: #36393F;
      border-radius: 24px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.2s ease;
    }

    .nav-icon:hover {
      background-color: #5865F2;
      border-radius: 16px;
    }

    .nav-icon img {
      width: 20px;
      height: 20px;
      filter: invert(1);
    }

    /* Channel Sidebar */
    .channel-sidebar {
      width: 240px;
      background-color: #2c2d31;
      display: flex;
      flex-direction: column;
    }

    .server-header {
      height: 48px;
      padding: 0 16px;
      display: flex;
      align-items: center;
      border-bottom: 1px solid #1e1f22;
      font-weight: 600;
      cursor: pointer;
    }

    .server-header:hover {
      background-color: #35373C;
    }

    .channels-container {
      flex: 1;
      padding: 16px 8px;
      overflow-y: auto;
    }

    .channel-category {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 16px 8px 4px 8px;
      font-size: 12px;
      font-weight: 600;
      color: #96989D;
      text-transform: uppercase;
      letter-spacing: 0.02em;
    }

    .channel-item {
      display: flex;
      align-items: center;
      padding: 6px 8px;
      margin: 1px 0;
      border-radius: 4px;
      cursor: pointer;
      color: #96989D;
      transition: all 0.15s ease;
    }

    .channel-item:hover {
      background-color: #35373C;
      color: #DCDDDE;
    }

    .channel-item.active {
      background-color: #404249;
      color: white;
    }

    .channel-item::before {
      content: '#';
      margin-right: 6px;
      font-weight: 300;
    }

    /* User Info */
    .user-info {
      height: 52px;
      background-color: #232428;
      padding: 8px;
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .user-avatar {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      background-color: #5865F2;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 600;
      font-size: 14px;
    }

    .user-details {
      flex: 1;
      min-width: 0;
    }

    .user-name {
      font-size: 14px;
      font-weight: 600;
      color: white;
      line-height: 18px;
    }

    .user-status {
      font-size: 12px;
      color: #96989D;
      line-height: 16px;
    }

    /* Chat Area */
    .chat-container {
      flex: 1;
      background-color: #36393F;
      display: flex;
      flex-direction: column;
    }

    .chat-header {
      height: 48px;
      padding: 0 16px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      border-bottom: 1px solid #1e1f22;
      gap: 8px;
    }

    .chat-header-left {
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .chat-header-right {
      font-size: 14px;
      color: #96989D;
    }

    .chat-header::before {
      content: '#';
      color: #96989D;
      font-weight: 300;
    }

    .channel-name {
      font-weight: 600;
      color: white;
    }

    .messages-container {
      flex: 1;
      overflow-y: auto;
      padding: 16px;
      display: flex;
      flex-direction: column;
      gap: 4px;
    }

    .message {
      display: flex;
      gap: 16px;
      padding: 2px 0;
      margin: 4px 0;
      border-radius: 4px;
      transition: background-color 0.1s ease;
    }

    .message:hover {
      background-color: #32353B;
    }

    .message-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 600;
      font-size: 16px;
      flex-shrink: 0;
      margin-top: 2px;
    }

    .message-content {
      flex: 1;
      min-width: 0;
    }

    .message-header {
      display: flex;
      align-items: baseline;
      gap: 8px;
      margin-bottom: 2px;
    }

    .message-author {
      font-weight: 500;
      font-size: 16px;
      cursor: pointer;
    }

    .message-author:hover {
      text-decoration: underline;
    }

    .message-timestamp {
      font-size: 12px;
      color: #96989D;
      font-weight: 500;
    }

    .message-text {
      font-size: 16px;
      line-height: 22px;
      color: #DCDDDE;
      word-wrap: break-word;
    }

    /* Message Input */
    .message-input-container {
      padding: 16px;
    }

    .message-form {
      background-color: #40444B;
      border-radius: 8px;
      padding: 11px 16px;
      display: flex;
      align-items: center;
      gap: 12px;
    }

    .message-input {
      flex: 1;
      background: transparent;
      border: none;
      color: white;
      font-size: 16px;
      line-height: 22px;
      resize: none;
      outline: none;
    }

    .message-input::placeholder {
      color: #96989D;
    }

    .send-button {
      background-color: #5865F2;
      color: white;
      border: none;
      border-radius: 6px;
      padding: 8px 16px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.15s ease;
    }

    .send-button:hover {
      background-color: #4752C4;
    }

    .send-button:disabled {
      background-color: #36393F;
      cursor: not-allowed;
      opacity: 0.5;
    }

    /* Members Sidebar */
    .members-sidebar {
      width: 240px;
      background-color: #2c2d31;
      display: flex;
      flex-direction: column;
      border-left: 1px solid #1e1f22;
    }

    .members-header {
      height: 48px;
      padding: 0 16px;
      display: flex;
      align-items: center;
      border-bottom: 1px solid #1e1f22;
      font-weight: 600;
      color: white;
    }

    .members-content {
      flex: 1;
      overflow-y: auto;
      padding: 16px 8px;
    }

    .members-section {
      margin-bottom: 24px;
    }

    .members-section-title {
      font-size: 12px;
      font-weight: 600;
      color: #96989D;
      text-transform: uppercase;
      letter-spacing: 0.02em;
      margin-bottom: 8px;
      padding: 0 8px;
    }

    .member-item {
      display: flex;
      align-items: center;
      padding: 2px 8px;
      margin: 1px 0;
      border-radius: 4px;
      cursor: pointer;
      transition: background-color 0.15s ease;
    }

    .member-item:hover {
      background-color: #35373C;
    }

    .member-avatar {
      width: 32px;
      height: 32px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 600;
      font-size: 14px;
      margin-right: 12px;
      position: relative;
    }

    .member-avatar::after {
      content: '';
      position: absolute;
      bottom: -2px;
      right: -2px;
      width: 12px;
      height: 12px;
      background-color: #3ba55c;
      border: 3px solid #2c2d31;
      border-radius: 50%;
    }

    .member-info {
      flex: 1;
      min-width: 0;
    }

    .member-name {
      font-size: 14px;
      font-weight: 500;
      color: white;
      line-height: 18px;
    }

    .member-status {
      font-size: 12px;
      color: #96989D;
      line-height: 16px;
    }

    /* Channel sidebar member list (old style) */
    .members-info {
      font-size: 12px;
      color: #96989D;
      margin-bottom: 8px;
      padding: 0 8px;
    }

    .members-list {
      max-height: 200px;
      overflow-y: auto;
      padding: 0 8px;
    }

    .member {
      padding: 2px 0;
      font-size: 14px;
      font-weight: 500;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
      /* Hide members sidebar on smaller screens */
      .members-sidebar {
        display: none;
      }
      
      /* Show channel sidebar members list on smaller screens */
      .channel-members {
        display: block;
      }
    }

    @media (min-width: 1025px) {
      /* Hide channel sidebar members list on larger screens */
      .channel-members {
        display: none;
      }
      
      /* Show members sidebar on larger screens */
      .members-sidebar {
        display: flex;
      }
    }

    /* Mobile adjustments */
    @media (max-width: 768px) {
      .server-sidebar {
        width: 60px;
        padding: 8px 4px;
      }
      
      .server-icon, .nav-icon {
        width: 40px;
        height: 40px;
      }
      
      .channel-sidebar {
        width: 200px;
      }
      
      .message-form {
        padding: 8px 12px;
      }
      
      .message-input {
        font-size: 14px;
      }
    }

    /* Very small mobile screens */
    @media (max-width: 480px) {
      .server-sidebar {
        width: 50px;
        padding: 6px 2px;
      }
      
      .server-icon, .nav-icon {
        width: 36px;
        height: 36px;
      }
      
      .channel-sidebar {
        width: 180px;
      }
      
      .chat-header {
        padding: 0 12px;
      }
      
      .messages-container {
        padding: 12px;
      }
      
      .message-input-container {
        padding: 12px;
      }
    }

    /* Scrollbar Styling */
    ::-webkit-scrollbar {
      width: 8px;
    }

    ::-webkit-scrollbar-track {
      background: transparent;
    }

    ::-webkit-scrollbar-thumb {
      background-color: #1a1a1a;
      border-radius: 4px;
    }

    ::-webkit-scrollbar-thumb:hover {
      background-color: #2a2a2a;
    }

    /* Connection Status */
    .connection-status {
      position: fixed;
      top: 10px;
      right: 10px;
      padding: 8px 12px;
      border-radius: 4px;
      font-size: 12px;
      font-weight: 500;
      z-index: 1000;
    }

    .connection-status.connected {
      background-color: #3ba55c;
      color: white;
    }

    .connection-status.disconnected {
      background-color: #ed4245;
      color: white;
    }
  </style>
</head>
<body>
  <!-- Connection Status -->
  <div id="connectionStatus" class="connection-status disconnected">Connecting...</div>

  <!-- Server Sidebar -->
  <div class="server-sidebar">
    <div class="server-icon">
      <img src="https://files.catbox.moe/uf0zh5.png" alt="Discord Logo"/>
    </div>
    
    <div class="separator"></div>
    
    <div class="nav-icon">
      <img src="https://img.icons8.com/ios-filled/50/FFFFFF/home.png" alt="Home">
    </div>
    <div class="nav-icon">
      <img src="https://static-00.iconduck.com/assets.00/console-controller-icon-2048x2048-pmmusn7m.png" alt="Games">
    </div>
    <div class="nav-icon">
      <img src="https://img.icons8.com/ios7/600/FFFFFF/apple-app-store--v2.png" alt="Apps">
    </div>
    <div class="nav-icon">
      <img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT0_6HUhLshuftA_sDchc5pEGqTBPa41EO6Xw&s" alt="Exploits">
    </div>
    <div class="nav-icon">
      <img src="https://img.icons8.com/m_rounded/512/FFFFFF/settings.png" alt="Settings">
    </div>
    <div class="nav-icon">
      <img src="https://files.catbox.moe/uf0zh5.png" alt="Chat">
    </div>
  </div>

  <!-- Channel Sidebar -->
  <div class="channel-sidebar">
    <div class="server-header">
      Unblockedcord
    </div>
    
    <div class="channels-container">
      <div class="channel-category">
        <span>Text Channels</span>
        <span>+</span>
      </div>
      <div class="channel-item active">general</div>
      <div class="channel-item">random</div>
      <div class="channel-item">memes</div>
      
      <div class="channel-members">
        <div class="members-info">
          <span class="members-count">0 users in room:</span>
        </div>
        <div class="members-list"></div>
      </div>
    </div>

    <div class="user-info">
      <div class="user-avatar" id="userAvatar">U</div>
      <div class="user-details">
        <div class="user-name" id="userName">Connecting...</div>
        <div class="user-status" id="userStatus">Offline</div>
      </div>
    </div>
  </div>

  <!-- Chat Container -->
  <div class="chat-container">
    <div class="chat-header">
      <div class="chat-header-left">
        <span class="channel-name">general</span>
      </div>
      <div class="chat-header-right">
        <span class="members-count-header">0 members</span>
      </div>
    </div>

    <div class="messages-container messages"></div>

    <div class="message-input-container">
      <form class="message-form" onsubmit="return false;">
        <input class="message-input message-form__input" placeholder="Type a message..." type="text"/>
        <button class="send-button message-form__button" type="submit" disabled>Send</button>
      </form>
    </div>
  </div>

  <!-- Members Sidebar -->
  <div class="members-sidebar">
    <div class="members-header">
      <span>Members — <span class="members-count-sidebar">0</span></span>
    </div>
    
    <div class="members-content">
      <div class="members-section">
        <div class="members-section-title">Online — <span class="online-count">0</span></div>
        <div class="members-list-sidebar"></div>
      </div>
    </div>
  </div>

  <script>
    const CLIENT_ID = 'hWmT5ZuGe51IgiMD';
    let drone;
    let members = [];
    let currentUser = null;

    // DOM elements
    const DOM = {
      membersCount: document.querySelector('.members-count'),
      membersList: document.querySelector('.members-list'),
      membersCountHeader: document.querySelector('.members-count-header'),
      membersCountSidebar: document.querySelector('.members-count-sidebar'),
      membersListSidebar: document.querySelector('.members-list-sidebar'),
      onlineCount: document.querySelector('.online-count'),
      messages: document.querySelector('.messages'),
      input: document.querySelector('.message-form__input'),
      form: document.querySelector('.message-form'),
      sendButton: document.querySelector('.message-form__button'),
      connectionStatus: document.getElementById('connectionStatus'),
      userName: document.getElementById('userName'),
      userStatus: document.getElementById('userStatus'),
      userAvatar: document.getElementById('userAvatar')
    };

    // Utility functions
    function getRandomName() {
      const adjs = ["autumn", "hidden", "bitter", "misty", "silent", "empty", "dry", "dark", "summer", "icy", "delicate", "quiet", "white", "cool", "spring", "winter", "patient", "twilight", "dawn", "crimson", "wispy", "weathered", "blue", "billowing", "broken", "cold", "damp", "falling", "frosty", "green", "long", "late", "lingering", "bold", "little", "morning", "muddy", "old", "red", "rough", "still", "small", "sparkling", "throbbing", "shy", "wandering", "withered", "wild", "black", "young", "holy", "solitary", "fragrant", "aged", "snowy", "proud", "floral", "restless", "divine", "polished", "ancient", "purple", "lively", "nameless"];
      const nouns = ["waterfall", "river", "breeze", "moon", "rain", "wind", "sea", "morning", "snow", "lake", "sunset", "pine", "shadow", "leaf", "dawn", "glitter", "forest", "hill", "cloud", "meadow", "sun", "glade", "bird", "brook", "butterfly", "bush", "dew", "dust", "field", "fire", "flower", "firefly", "feather", "grass", "haze", "mountain", "night", "pond", "darkness", "snowflake", "silence", "sound", "sky", "shape", "surf", "thunder", "violet", "water", "wildflower", "wave", "water", "resonance", "sun", "wood", "dream", "cherry", "tree", "fog", "frost", "voice", "paper", "frog", "smoke", "star"];
      return (
        adjs[Math.floor(Math.random() * adjs.length)] +
        "_" +
        nouns[Math.floor(Math.random() * nouns.length)]
      );
    }

    function getRandomColor() {
      return '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);
    }

    function updateConnectionStatus(status) {
      DOM.connectionStatus.textContent = status;
      DOM.connectionStatus.className = `connection-status ${status === 'Connected' ? 'connected' : 'disconnected'}`;
      
      if (status === 'Connected') {
        DOM.sendButton.disabled = false;
        DOM.userStatus.textContent = 'Online';
      } else {
        DOM.sendButton.disabled = true;
        DOM.userStatus.textContent = 'Offline';
      }
    }

    // Initialize ScaleDrone
    function initializeChat() {
      currentUser = {
        name: getRandomName(),
        color: getRandomColor()
      };

      // Update UI with user info
      DOM.userName.textContent = currentUser.name;
      DOM.userAvatar.textContent = currentUser.name.charAt(0).toUpperCase();
      DOM.userAvatar.style.backgroundColor = currentUser.color;

      drone = new ScaleDrone(CLIENT_ID, {
        data: currentUser
      });

      drone.on('open', error => {
        if (error) {
          console.error(error);
          updateConnectionStatus('Error');
          return;
        }
        console.log('Successfully connected to Scaledrone');
        updateConnectionStatus('Connected');

        const room = drone.subscribe('observable-room');
        
        room.on('open', error => {
          if (error) {
            console.error(error);
            return;
          }
          console.log('Successfully joined room');
        });

        room.on('members', m => {
          members = m;
          updateMembersDOM();
        });

        room.on('member_join', member => {
          members.push(member);
          updateMembersDOM();
        });

        room.on('member_leave', ({id}) => {
          const index = members.findIndex(member => member.id === id);
          members.splice(index, 1);
          updateMembersDOM();
        });
        
        room.on('data', (text, member) => {
          if (member) {
            addMessageToListDOM(text, member);
          }
        });
      });

      drone.on('close', event => {
        console.log('Connection was closed', event);
        updateConnectionStatus('Disconnected');
      });

      drone.on('error', error => {
        console.error(error);
        updateConnectionStatus('Error');
      });
    }

    // Event listeners
    DOM.form.addEventListener('submit', sendMessage);

    function sendMessage() {
      const value = DOM.input.value.trim();
      if (value === '' || !drone) {
        return;
      }
      DOM.input.value = '';
      drone.publish({
        room: 'observable-room',
        message: value,
      });
    }

    function createMemberElement(member) {
      const { name, color } = member.clientData;
      const el = document.createElement('div');
      el.appendChild(document.createTextNode(name));
      el.className = 'member';
      el.style.color = color;
      return el;
    }

    function createMemberSidebarElement(member) {
      const { name, color } = member.clientData;
      const memberEl = document.createElement('div');
      memberEl.className = 'member-item';

      const avatarEl = document.createElement('div');
      avatarEl.className = 'member-avatar';
      avatarEl.style.backgroundColor = color;
      avatarEl.textContent = name.charAt(0).toUpperCase();

      const infoEl = document.createElement('div');
      infoEl.className = 'member-info';

      const nameEl = document.createElement('div');
      nameEl.className = 'member-name';
      nameEl.textContent = name;

      const statusEl = document.createElement('div');
      statusEl.className = 'member-status';
      statusEl.textContent = 'Online';

      infoEl.appendChild(nameEl);
      infoEl.appendChild(statusEl);
      memberEl.appendChild(avatarEl);
      memberEl.appendChild(infoEl);

      return memberEl;
    }

    function updateMembersDOM() {
      const memberCount = members.length;
      
      // Update old channel sidebar
      DOM.membersCount.innerText = `${memberCount} users in room:`;
      DOM.membersList.innerHTML = '';
      members.forEach(member =>
        DOM.membersList.appendChild(createMemberElement(member))
      );

      // Update new members sidebar
      DOM.membersCountHeader.textContent = `${memberCount} member${memberCount !== 1 ? 's' : ''}`;
      DOM.membersCountSidebar.textContent = memberCount;
      DOM.onlineCount.textContent = memberCount;
      DOM.membersListSidebar.innerHTML = '';
      members.forEach(member =>
        DOM.membersListSidebar.appendChild(createMemberSidebarElement(member))
      );
    }

    function createMessageElement(text, member) {
      const { name, color } = member.clientData;
      const messageEl = document.createElement('div');
      messageEl.className = 'message';

      const avatarEl = document.createElement('div');
      avatarEl.className = 'message-avatar';
      avatarEl.style.backgroundColor = color;
      avatarEl.textContent = name.charAt(0).toUpperCase();

      const contentEl = document.createElement('div');
      contentEl.className = 'message-content';

      const headerEl = document.createElement('div');
      headerEl.className = 'message-header';

      const authorEl = document.createElement('span');
      authorEl.className = 'message-author';
      authorEl.style.color = color;
      authorEl.textContent = name;

      const timestampEl = document.createElement('span');
      timestampEl.className = 'message-timestamp';
      timestampEl.textContent = new Date().toLocaleTimeString([], { 
        hour: '2-digit', 
        minute: '2-digit' 
      });

      const textEl = document.createElement('div');
      textEl.className = 'message-text';
      textEl.textContent = text;

      headerEl.appendChild(authorEl);
      headerEl.appendChild(timestampEl);
      contentEl.appendChild(headerEl);
      contentEl.appendChild(textEl);
      messageEl.appendChild(avatarEl);
      messageEl.appendChild(contentEl);

      return messageEl;
    }

    function addMessageToListDOM(text, member) {
      const el = DOM.messages;
      const wasAtBottom = el.scrollTop === el.scrollHeight - el.clientHeight;
      el.appendChild(createMessageElement(text, member));
      if (wasAtBottom) {
        el.scrollTop = el.scrollHeight - el.clientHeight;
      }
    }

    // Initialize chat when page loads
    window.addEventListener('load', initializeChat);

    // Handle Enter key for sending messages
    DOM.input.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        sendMessage();
      }
    });
  </script>
</body>
</html>
