<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BI6ZONE - YouTube Video Summarizer</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: 45, 100%, 65%;
            --primary-dark: 45, 100%, 55%;
            --primary-light: 45, 100%, 75%;
            --accent: 30, 100%, 60%;
            --background: 0, 0%, 3%;
            --surface: 0, 0%, 8%;
            --surface-elevated: 0, 0%, 12%;
            --text-primary: 45, 80%, 90%;
            --text-secondary: 45, 40%, 70%;
            --text-muted: 45, 20%, 50%;
            --border: 45, 30%, 20%;
            --shadow: 45, 100%, 20%;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            min-height: 100vh;
            background: 
                radial-gradient(circle at 30% 20%, hsla(var(--primary), 0.2) 0%, transparent 60%),
                radial-gradient(circle at 70% 80%, hsla(var(--accent), 0.15) 0%, transparent 60%),
                radial-gradient(circle at 20% 60%, hsla(var(--primary), 0.08) 0%, transparent 50%),
                linear-gradient(135deg, hsl(var(--background)) 0%, hsl(0, 0%, 1%) 100%);
            color: hsl(var(--text-primary));
            overflow-x: hidden;
        }

        body::before {
            content: '';
            position: fixed;
            inset: 0;
            background: 
                radial-gradient(circle at 15% 85%, hsla(var(--primary), 0.03) 0%, transparent 40%),
                radial-gradient(circle at 85% 15%, hsla(var(--accent), 0.02) 0%, transparent 40%);
            pointer-events: none;
            z-index: 1;
            animation: ambientFloat 15s ease-in-out infinite alternate;
        }

        @keyframes ambientFloat {
            0% { transform: translate(0, 0) rotate(0deg) scale(1); }
            100% { transform: translate(10px, -5px) rotate(1deg) scale(1.02); }
        }

        .container {
            position: relative;
            z-index: 10;
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            min-height: 100vh;
        }

        .top-navigation {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            position: relative;
        }

        .back-button {
            background: hsla(var(--surface-elevated), 0.8);
            border: 1px solid hsla(var(--border), 0.4);
            color: hsl(var(--text-secondary));
            backdrop-filter: blur(10px);
            border-radius: 1rem;
            padding: 0.8rem 1.5rem;
            font-weight: 500;
            font-family: inherit;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .back-button:hover {
            background: hsla(var(--surface-elevated), 0.9);
            border-color: hsla(var(--primary), 0.4);
            color: hsl(var(--text-primary));
            transform: translateY(-1px);
            box-shadow: 
                0 4px 15px hsla(var(--primary), 0.15),
                0 1px 0 hsla(var(--primary), 0.1) inset;
        }

        .dropdown-container {
            position: relative;
            display: inline-block;
        }

        .dropdown-button {
            background: hsla(var(--surface-elevated), 0.8);
            border: 1px solid hsla(var(--border), 0.4);
            color: hsl(var(--text-secondary));
            backdrop-filter: blur(10px);
            border-radius: 1rem;
            padding: 0.8rem 1.5rem;
            font-weight: 500;
            font-family: inherit;
            font-size: 0.9rem;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            outline: none;
        }

        .dropdown-button:hover {
            background: hsla(var(--surface-elevated), 0.9);
            border-color: hsla(var(--primary), 0.4);
            color: hsl(var(--text-primary));
            transform: translateY(-1px);
            box-shadow: 
                0 4px 15px hsla(var(--primary), 0.15),
                0 1px 0 hsla(var(--primary), 0.1) inset;
        }

        .dropdown-arrow {
            transition: transform 0.3s ease;
            font-size: 0.8rem;
        }

        .dropdown-button.active .dropdown-arrow {
            transform: rotate(180deg);
        }

        .dropdown-menu {
            position: absolute;
            top: 100%;
            right: 0;
            margin-top: 0.5rem;
            background: hsla(var(--surface-elevated), 0.95);
            border: 1px solid hsla(var(--border), 0.6);
            border-radius: 1.5rem;
            padding: 1rem;
            backdrop-filter: blur(20px);
            box-shadow: 
                0 12px 40px hsla(var(--shadow), 0.3),
                0 1px 0 hsla(var(--primary), 0.1) inset;
            z-index: 1000;
            min-width: 200px;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        .dropdown-menu.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .dropdown-item {
            display: block;
            padding: 0.75rem 1rem;
            color: hsl(var(--text-secondary));
            text-decoration: none;
            border-radius: 0.8rem;
            margin-bottom: 0.5rem;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .dropdown-item:last-child {
            margin-bottom: 0;
        }

        .dropdown-item:hover {
            background: hsla(var(--primary), 0.1);
            color: hsl(var(--text-primary));
            transform: translateX(4px);
        }

        .header {
            text-align: center;
            margin-bottom: 3rem;
            animation: slideDown 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        }

        .logo {
            font-size: 3.2rem;
            font-weight: 700;
            background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary-light)) 50%, hsl(var(--accent)) 100%);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
            letter-spacing: -0.02em;
        }

        .subtitle {
            font-size: 1.4rem;
            color: hsl(var(--text-secondary));
            font-weight: 400;
            margin-bottom: 0.5rem;
        }

        .description {
            font-size: 1rem;
            color: hsl(var(--text-muted));
            max-width: 600px;
            margin: 0 auto;
            line-height: 1.6;
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            animation: slideUp 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.3s both;
        }

        .input-section {
            background: hsla(var(--surface), 0.8);
            border: 1px solid hsla(var(--border), 0.6);
            border-radius: 2rem;
            padding: 2.5rem;
            backdrop-filter: blur(20px);
            box-shadow: 
                0 12px 40px hsla(var(--shadow), 0.3),
                0 1px 0 hsla(var(--primary), 0.1) inset;
            position: relative;
            overflow: hidden;
        }

        .input-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 2px;
            background: linear-gradient(90deg, transparent, hsl(var(--primary)), transparent);
        }

        .section-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: hsl(var(--text-primary));
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .url-input {
            width: 100%;
            background: hsla(var(--surface-elevated), 0.9);
            border: 1px solid hsla(var(--border), 0.4);
            border-radius: 1.2rem;
            padding: 1.2rem 1.5rem;
            color: hsl(var(--text-primary));
            font-size: 1rem;
            font-family: inherit;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            backdrop-filter: blur(10px);
            margin-bottom: 1.5rem;
        }

        .url-input:focus {
            outline: none;
            border-color: hsla(var(--primary), 0.6);
            background: hsla(var(--surface-elevated), 1);
            box-shadow: 
                0 0 0 3px hsla(var(--primary), 0.1),
                0 8px 30px hsla(var(--primary), 0.2);
            transform: translateY(-1px);
        }

        .url-input::placeholder {
            color: hsl(var(--text-muted));
        }

        .analyze-button {
            width: 100%;
            background: linear-gradient(135deg, hsl(var(--primary)) 0%, hsl(var(--primary-dark)) 100%);
            color: hsl(0, 0%, 5%);
            border: none;
            border-radius: 1.2rem;
            padding: 1.2rem 2rem;
            font-weight: 600;
            font-family: inherit;
            font-size: 1rem;
            cursor: pointer;
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            position: relative;
            overflow: hidden;
            box-shadow: 
                0 8px 25px hsla(var(--primary), 0.4),
                0 1px 0 hsla(var(--primary-light), 0.3) inset;
        }

        .analyze-button::before {
            content: '';
            position: absolute;
            inset: 0;
            background: linear-gradient(135deg, transparent 0%, hsla(255, 255, 255, 0.2) 50%, transparent 100%);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .analyze-button:hover::before {
            opacity: 1;
        }

        .analyze-button:hover {
            transform: translateY(-2px);
            box-shadow: 
                0 12px 35px hsla(var(--primary), 0.5),
                0 1px 0 hsla(var(--primary-light), 0.4) inset;
        }

        .analyze-button:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .output-section {
            background: hsla(var(--surface), 0.6);
            border: 1px solid hsla(var(--border), 0.4);
            border-radius: 2rem;
            padding: 2.5rem;
            backdrop-filter: blur(20px);
            position: relative;
            overflow: hidden;
        }

        .output-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 2px;
            background: linear-gradient(90deg, transparent, hsl(var(--accent)), transparent);
        }

        .summary-content {
            min-height: 300px;
            background: hsla(var(--surface-elevated), 0.8);
            border: 1px solid hsla(var(--border), 0.3);
            border-radius: 1.5rem;
            padding: 2rem;
            color: hsl(var(--text-primary));
            line-height: 1.7;
            backdrop-filter: blur(10px);
            font-size: 0.95rem;
            white-space: pre-wrap;
        }

        .empty-state {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            text-align: center;
            color: hsl(var(--text-muted));
        }

        .empty-icon {
            font-size: 4rem;
            margin-bottom: 1rem;
            opacity: 0.5;
        }

        .loading {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            gap: 1rem;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 3px solid hsla(var(--primary), 0.2);
            border-top: 3px solid hsl(var(--primary));
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .loading-text {
            color: hsl(var(--text-secondary));
            font-weight: 500;
        }

        .error-message {
            background: hsla(0, 65%, 50%, 0.1);
            border: 1px solid hsla(0, 65%, 50%, 0.3);
            color: hsl(0, 65%, 80%);
            padding: 1.5rem;
            border-radius: 1.2rem;
            margin-bottom: 1.5rem;
            backdrop-filter: blur(10px);
            font-weight: 500;
        }

        @keyframes slideDown {
            from { opacity: 0; transform: translateY(-30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideUp {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }
            
            .container {
                padding: 1rem;
            }
            
            .logo {
                font-size: 2.5rem;
            }
            
            .subtitle {
                font-size: 1.2rem;
            }
            
            .input-section, .output-section {
                padding: 2rem;
            }

            .top-navigation {
                flex-direction: column;
                gap: 1rem;
                align-items: stretch;
            }

            .back-button, .dropdown-button {
                width: 100%;
                justify-content: center;
            }

            .dropdown-menu {
                right: 0;
                left: 0;
                min-width: auto;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="top-navigation">
            <a href="index.html" class="back-button">
                ← Back to Homework Bot
            </a>
            <div class="dropdown-container">
                <button class="dropdown-button" id="moreButton" onclick="toggleDropdown()">
                    More
                    <span class="dropdown-arrow">▼</span>
                </button>
                <div class="dropdown-menu" id="dropdownMenu">
                    <a href="ai-humanizer.html" class="dropdown-item">🤖 AI Humanizer</a>
                    <a href="pdf-chat.html" class="dropdown-item">📄 PDF Chat</a>
                    <a href="main.html" class="dropdown-item">🚀 Exit to BI6ZONE</a>
                </div>
            </div>
        </div>
        
        <div class="header">
            <h1 class="logo">BI6ZONE</h1>
            <p class="subtitle">🎥 YouTube Video Summarizer</p>
            <p class="description">Get instant AI-powered summaries of any YouTube video. Simply paste a URL and let our advanced AI extract key insights in seconds.</p>
        </div>

        <div class="main-content">
            <div class="input-section">
                <h2 class="section-title">
                    🔗 Video URL
                </h2>
                <input 
                    type="url" 
                    id="videoUrl" 
                    class="url-input" 
                    placeholder="https://www.youtube.com/watch?v=..."
                    autocomplete="off"
                >
                <button class="analyze-button" id="analyzeButton" onclick="summarizeVideo()">
                    <span id="buttonText">🚀 Analyze & Summarize</span>
                </button>
            </div>

            <div class="output-section">
                <h2 class="section-title">
                    📋 Summary Output
                </h2>
                <div class="summary-content" id="summaryOutput">
                    <div class="empty-state">
                        <div class="empty-icon">📺</div>
                        <p>Your video summary will appear here...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const API_KEY = 'AIzaSyBuJ1-rKWOZG_txWTbU3vMinT6ytKBtI_E';
        const API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent';
        
        function showLoading() {
            const button = document.getElementById('analyzeButton');
            const buttonText = document.getElementById('buttonText');
            const output = document.getElementById('summaryOutput');
            
            button.disabled = true;
            buttonText.innerHTML = '🔄 Analyzing...';
            
            output.innerHTML = `
                <div class="loading">
                    <div class="spinner"></div>
                    <div class="loading-text">Extracting video content and generating summary...</div>
                </div>
            `;
        }

        function hideLoading() {
            const button = document.getElementById('analyzeButton');
            const buttonText = document.getElementById('buttonText');
            
            button.disabled = false;
            buttonText.innerHTML = '🚀 Analyze & Summarize';
        }

        function showError(message) {
            const output = document.getElementById('summaryOutput');
            output.innerHTML = `
                <div class="error-message">
                    ❌ ${message}
                </div>
                <div class="empty-state">
                    <div class="empty-icon">🔄</div>
                    <p>Try again with a valid YouTube URL</p>
                </div>
            `;
        }

        function extractVideoId(url) {
            const regex = /(?:youtube\.com\/(?:[^\/]+\/.+\/|(?:v|e(?:mbed)?)\/|.*[?&]v=)|youtu\.be\/)([^"&?\/\s]{11})/;
            const match = url.match(regex);
            return match ? match[1] : null;
        }

        async function getVideoTranscript(videoId) {
            // This is a simplified approach - in production you'd use YouTube Data API or transcript services
            const prompt = `I need you to help me summarize a YouTube video with ID: ${videoId}. 
            Since I cannot access the actual transcript, please provide a response that explains this limitation and suggests alternative methods for video summarization, such as:
            1. Using YouTube's auto-generated captions if available
            2. Using third-party transcript services
            3. Manual note-taking while watching
            
            Format your response as a helpful guide for video summarization.`;
            
            return prompt;
        }

        async function summarizeVideo() {
            const urlInput = document.getElementById('videoUrl');
            const url = urlInput.value.trim();
            
            if (!url) {
                showError('Please enter a YouTube URL');
                return;
            }

            const videoId = extractVideoId(url);
            if (!videoId) {
                showError('Invalid YouTube URL. Please enter a valid YouTube video link.');
                return;
            }

            showLoading();

            try {
                // For demo purposes, we'll create a mock summary
                // In production, you'd integrate with YouTube Data API and transcript services
                const mockSummary = await generateMockSummary(url);
                
                const requestBody = {
                    contents: [{
                        role: 'user',
                        parts: [{
                            text: `Please create a comprehensive summary for this YouTube video: ${url}

For this demonstration, please provide a well-structured summary that includes:

🎯 **Main Topic & Purpose**
📝 **Key Points Covered** (3-5 main points)
💡 **Important Insights**
⏱️ **Estimated Watch Time Value**
🎯 **Target Audience**
📚 **Key Takeaways**

Make the summary engaging and informative, as if you've watched the entire video. Use emojis and proper formatting to make it visually appealing.

Note: This is a demo version. In production, this would analyze the actual video transcript and content.`
                        }]
                    }],
                    systemInstruction: {
                        parts: [{
                            text: "You are an expert video content analyzer and summarizer. Create comprehensive, well-structured summaries that capture the essence of video content. Use clear formatting with emojis and bullet points. Be concise but thorough."
                        }]
                    }
                };

                const response = await fetch(`${API_URL}?key=${API_KEY}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(requestBody)
                });

                if (!response.ok) {
                    throw new Error('Failed to generate summary');
                }

                const data = await response.json();
                const summary = data.candidates[0].content.parts[0].text;

                document.getElementById('summaryOutput').innerHTML = summary;

            } catch (error) {
                console.error('Error:', error);
                showError('Failed to summarize video. Please try again.');
            } finally {
                hideLoading();
            }
        }

        // Enter to submit
        document.getElementById('videoUrl').addEventListener('keydown', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                summarizeVideo();
            }
        });

        // Dropdown functionality
        function toggleDropdown() {
            const dropdownMenu = document.getElementById('dropdownMenu');
            const moreButton = document.getElementById('moreButton');
            
            dropdownMenu.classList.toggle('show');
            moreButton.classList.toggle('active');
        }

        // Close dropdown when clicking outside
        document.addEventListener('click', function(event) {
            const dropdownContainer = document.querySelector('.dropdown-container');
            const dropdownMenu = document.getElementById('dropdownMenu');
            const moreButton = document.getElementById('moreButton');
            
            if (!dropdownContainer.contains(event.target)) {
                dropdownMenu.classList.remove('show');
                moreButton.classList.remove('active');
            }
        });
    </script>
</body>
</html>
